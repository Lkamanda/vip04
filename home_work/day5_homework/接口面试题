1-你设计这套框架用了多久，维护了多少个接口/用例，运行一次需要多长时间
2-你设计框架的时候遇到了哪些问题，你是怎么解决的
    1。路径问题，测试数据的分发机制，依赖上一条测试用列的返回数据的某些字段，token的获取存放，以及娇艳token是否生效
3-你都用过那些python的包
unittest
requests
time
os
xlrd
xlutils
configparser
HTMLTestRunner
logging
email
4-接口之间的数据依赖是怎么解决的
再原来的框架上新增三个字段，
1） 如果不为空，根据excal预先设置字典中字段获取请求的返回的某些字段，
2）将其存储在另外一个字段中 （return_data）
3) 如果某条用例需要其他用例的return_data ,可以通过 预先设置想 x,y （excal的行和列）获取到将要使用的数据
需要重新设计数据的分发机制，和excal的读写方法


5-你们的断言是怎么做的
响应状态码，请求返回某些字段校验
如有多个字段需要断言，则先判断重excal中的类型，如果是字典则遍历字典，通过k取v，如果str正常执行
https://blog.csdn.net/qq_22795513/article/details/76187722
6-介绍一下你的框架功能
    1）使用xlrd 读取excal中数据，使用 congfigparser 读取配置文件
    2）使用ddt分发数据
    3）discover 构建测试集合，post 等请求方法的二次封装
    4）运行测试，借口断言，将断言结果和异常和失败的借口返回数据写入excal
    5）logging程序运行日志生成
    6）HTMLTestRunner，生成测试报告，发送携带测试报告的邮件
    7）根据修改时间删除除最近10条的测试报告文件
    8）提供log模块，生成track文件

7-你认为目前框架还有哪些不足/优势
1。更加细节的断言
2.应将excal中内容多的字段，存入json文件，方便excal美观维护

